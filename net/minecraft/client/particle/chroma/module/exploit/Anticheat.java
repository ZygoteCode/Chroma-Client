package net.minecraft.client.particle.chroma.module.exploit;

import net.minecraft.client.particle.chroma.Chroma;
import net.minecraft.client.particle.chroma.event.EventState;
import net.minecraft.client.particle.chroma.event.EventTarget;
import net.minecraft.client.particle.chroma.event.events.EventReceiveChatMessage;
import net.minecraft.client.particle.chroma.event.events.EventUpdate;
import net.minecraft.client.particle.chroma.module.Category;
import net.minecraft.client.particle.chroma.module.Module;
import net.minecraft.client.particle.chroma.utils.Timer;

public class Anticheat extends Module
{
	private Timer timer;
	private int tick;
	
	public Anticheat()
	{
		super("Anticheat", 70, Category.EXPLOIT);
	}
	
	@Override
	public void setup()
	{
		timer = new Timer();
		tick = 0;
		super.setup();
	}
	
	@Override
	public void onToggle()
	{
		timer = new Timer();
		tick = 0;
		super.onToggle();
	}
	
	@EventTarget
	public void onUpdate(EventUpdate event)
	{
		if (event.getState().equals(EventState.PRE))
		{
			if (tick == 0 && timer.hasReach(500D))
			{
				tick = 1;
				timer.reset();
				mc.thePlayer.sendChatMessage("/aac");
			}
			else if (tick == 1 && timer.hasReach(700D))
			{
				tick = 2;
				timer.reset();
				mc.thePlayer.sendChatMessage("/ncp");
			}
			else if (tick == 2 && timer.hasReach(700D))
			{
				tick = 3;
				timer.reset();
				mc.thePlayer.sendChatMessage("/spartan");
			}
			else if (tick == 3 && timer.hasReach(1400D))
			{
				tick = 4;
				timer.reset();
				mc.thePlayer.sendChatMessage("/aacap");
			}
			else if (tick == 4 && timer.hasReach(1400D))
			{
				tick = 5;
				timer.reset();
				mc.thePlayer.sendChatMessage("/matrix");
			}
			else if (tick == 5 && timer.hasReach(700D))
			{
				tick = 6;
				timer.reset();
				mc.thePlayer.sendChatMessage("/horizon");
			}
			else if (tick == 6 && timer.hasReach(1400D))
			{
				tick = 7;
				timer.reset();
				mc.thePlayer.sendChatMessage("/verus");
			}
			else if (tick == 7 && timer.hasReach(500D))
			{
				this.setToggled(false);
			}
		}
	}
	
	@EventTarget
	public void onReceiveMessage(EventReceiveChatMessage event)
	{
		event.setCancelled(true);
		
		if (event.getComponent().getFormattedText().toLowerCase().contains("konsolas"))
		{
			Chroma.message("§7Found anticheat: §cAdvanced Anti Cheat§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("administrative commands overview:"))
		{
			Chroma.message("§7Found anticheat: §cNo Cheat Plus§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("spartan"))
		{
			Chroma.message("§7Found anticheat: §cSpartan Anti Cheat§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("aacadditionpro"))
		{
			Chroma.message("§7Found anticheat: §cAAC Addition Pro§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("matrix"))
		{
			Chroma.message("§7Found anticheat: §cMatrix Anti Cheat§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("horizon"))
		{
			Chroma.message("§7Found anticheat: §cHorizon Anti Cheat§7.");
		}
		else if (event.getComponent().getFormattedText().toLowerCase().contains("verus"))
		{
			Chroma.message("§7Found anticheat: §cVerus Anti Cheat§7.");
		}
	}
}
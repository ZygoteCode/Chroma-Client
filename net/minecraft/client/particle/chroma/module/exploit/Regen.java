package net.minecraft.client.particle.chroma.module.exploit;

import java.util.ArrayList;

import net.minecraft.client.particle.chroma.event.EventState;
import net.minecraft.client.particle.chroma.event.EventTarget;
import net.minecraft.client.particle.chroma.event.events.EventUpdate;
import net.minecraft.client.particle.chroma.module.Category;
import net.minecraft.client.particle.chroma.module.Module;
import net.minecraft.client.particle.chroma.settings.Setting;
import net.minecraft.client.particle.chroma.utils.Timer;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.potion.Potion;

public class Regen extends Module
{
	private Timer timer;
	
	public Regen()
	{
		super("Regen", 81, Category.EXPLOIT);
	}
	
	@Override
	public void setup()
	{
		timer = new Timer();
		ArrayList<String> modes = new ArrayList<String>();
		modes.add("Normal");
		modes.add("AAC");
		this.getSetManager().rSetting(new Setting(297, "Mode", "", this, "Normal", modes));
		this.getSetManager().rSetting(new Setting(270, "Health", "", this, 14, 1, 20, true));
		this.getSetManager().rSetting(new Setting(271, "Packets", "", this, 2, 1, 15, true));
		super.setup();
	}
	
	@Override
	public void onToggle()
	{
		timer.reset();
	}
	
	@EventTarget
	public void onUpdate(EventUpdate event)
	{
		this.setSuffix(" §7" + this.getMode());
		
		if (event.getState().equals(EventState.PRE) && this.getMode().equals("Normal"));
		{
	        int i2;
	        
	        if ((Integer)this.getSetManager().getSettingById(271).getValueI() < 10 && mc.thePlayer.getHealth() < mc.thePlayer.getMaxHealth() && this.timer.hasReach(160L))
	        {
	        	timer.reset();
	        	
	            for (i2 = 1; i2 < (Integer)this.getSetManager().getSettingById(271).getValueI() + 1; ++i2)
	            {
	                mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer());
	            }
	        }
	        
	        if (mc.thePlayer.getHealth() < mc.thePlayer.getMaxHealth() && (Integer)this.getSetManager().getSettingById(271).getValueI() == 69 && mc.thePlayer.getActivePotionEffect(Potion.regeneration) != null)
	        {
	            for (i2 = 0; i2 < 5; ++i2)
	            {
	                mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(mc.thePlayer.onGround));
	            }
	        }
	        
	        if (mc.thePlayer.getHealth() < mc.thePlayer.getMaxHealth() && (Integer)this.getSetManager().getSettingById(271).getValueI() == 70)
	        {
	            i2 = 1;
	            
	            while ((float)i2 < mc.thePlayer.getMaxHealth() - mc.thePlayer.getHealth())
	            {
	            	mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C05PacketPlayerLook(0.0f, 0.0f, true));
	            	mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY - 0.05, mc.thePlayer.posZ, true));
	                ++i2;
	            }
	        }
	        
	        for (int index = 0; index < (Integer)this.getSetManager().getSettingById(271).getValueI(); ++index)
	        {
	            if (!mc.thePlayer.onGround || !(mc.thePlayer.getHealth() <= (float)((Double)this.getSetManager().getSettingById(270).getValueD()).intValue()) || !mc.thePlayer.isEntityAlive() || mc.thePlayer.getFoodStats().getFoodLevel() <= 10 || (Integer)this.getSetManager().getSettingById(271).getValueI() <= 10 || (Integer)this.getSetManager().getSettingById(271).getValueI() == 69 || (Integer)this.getSetManager().getSettingById(271).getValueI() == 70) continue;
	            
	            if (mc.thePlayer.onGround)
	            {
	                mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(false));
	                continue;
	            }
	            
	            mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer());
	        }
		}
		
		if (this.getMode().equals("AAC"))
		{
			mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(mc.thePlayer.posX, mc.thePlayer.posY - 0.1, mc.thePlayer.posZ, mc.thePlayer.rotationYaw, mc.thePlayer.rotationPitch, true));
		}
	}
}
package net.minecraft.client.particle.chroma.module.exploit;

import java.net.URL;

import net.minecraft.client.particle.chroma.event.EventTarget;
import net.minecraft.client.particle.chroma.event.events.EventReceivePacket;
import net.minecraft.client.particle.chroma.module.Category;
import net.minecraft.client.particle.chroma.module.Module;
import net.minecraft.network.play.client.C19PacketResourcePackStatus;
import net.minecraft.network.play.server.S48PacketResourcePackSend;

public class ResPackSpoof extends Module
{
	public ResPackSpoof()
	{
		super("ResPackSpoof", 127, Category.EXPLOIT);
	}
	
	@EventTarget
	public void onReceivePacket(EventReceivePacket event)
	{
		if (event.getPacket() instanceof S48PacketResourcePackSend)
		{
			S48PacketResourcePackSend packet = (S48PacketResourcePackSend) event.getPacket();
			String url = packet.getURL();
			String hash = packet.getHash();
			
			try
			{
				URL Url = new URL(url);
				String scheme = Url.getProtocol();
				boolean isLevelProtocol = "level" == scheme;
				
				if ("http" != scheme && "https" != scheme && !isLevelProtocol)
				{
					event.setCancelled(true);
					return;
				}
				
				mc.thePlayer.sendQueue.addToSendQueue(new C19PacketResourcePackStatus(hash, C19PacketResourcePackStatus.Action.ACCEPTED));
				mc.thePlayer.sendQueue.addToSendQueue(new C19PacketResourcePackStatus(hash, C19PacketResourcePackStatus.Action.SUCCESSFULLY_LOADED));
			}
			catch (Exception ex)
			{
				mc.thePlayer.sendQueue.addToSendQueue(new C19PacketResourcePackStatus(hash, C19PacketResourcePackStatus.Action.FAILED_DOWNLOAD));
			}
		}
	}
}